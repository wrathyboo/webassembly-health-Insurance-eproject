@page "/change-password"
@page "/change-password/{id}"
@using System.Net.Http.Headers
@using Microsoft.AspNetCore.Authorization
@using HealthInsurance.Shared
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
<div class="container" style="padding-bottom:500px">
    <div class="text-center" style="padding-top:50px">
        @if (Id != null)
        {
            <h3>
                Password change
            </h3>
            @if (error)
            {
                <p class="text-bg-danger">Unable to verify!</p>
            }
            <div class="d-flex justify-content-center">
                <EditForm Model="PasswordModel" OnValidSubmit="HandleSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div>
                        <label for="password">New password</label>
                        <InputText id="password" @bind-Value="PasswordModel.Password" class="form-control"></InputText>
                        <ValidationMessage For="@(() => PasswordModel.Password)" />
                    </div>
                    <div>
                        <label for="confirm">Confirm new password</label>
                        <InputText id="confirm" @bind-Value="PasswordModel.ConfirmPassword" class="form-control"></InputText>
                        <ValidationMessage For="@(() => PasswordModel.ConfirmPassword)" />
                    </div>

                    <div class="text-center">
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </EditForm>

            </div>
        }
        else
        {
            <div class="d-flex justify-content-center">
                <EditForm Model="Username" OnSubmit="HandleSubmit">

                    <div>
                        <label for="password">Enter username or email</label>
                        <InputText id="password" @bind-Value="Username.UsernameEmail" class="form-control"></InputText>
                    </div>

                    <div class="text-center">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </EditForm>

            </div>
        }
    </div>

</div>
@code {
    private PasswordModel PasswordModel = new PasswordModel();
    private ForgotPassword Username = new ForgotPassword();
    bool error = false;

    [Parameter]
    public string? Id { get; set; }

    async Task HandleSubmit()
    {
        if(Id != null)
        {
            var result = await Http.PostAsJsonAsync($"api/user/change-password/{Id}", PasswordModel);
            if (result.IsSuccessStatusCode)
            {
                await JsRuntime.InvokeVoidAsync("alert", "Your password has been reset!"); // Alert
                navigationManager.NavigateTo("/login");
            }
            else
            {
                error = true;
            }
        }
        else
        {
            var result = await Http.GetFromJsonAsync<ApplicationUser>($"api/accounts/find-user/{Username.UsernameEmail}");
            if (result != null)
            {
                navigationManager.NavigateTo($"/change-password/{result.UserName}");
            }
            else
            {
                error = true;
            }
        }

    }
}
